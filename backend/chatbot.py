import requests
import openai
import re
import os
from typing import Optional

OPENROUTER_API_KEY = "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"

FURIA_KNOWLEDGE = """
Voc√™ √© o assistente oficial da FURIA Esports no CS2. Informa√ß√µes atualizadas em abril/2025:

üîπ Elenco Atual:
  ‚Ä¢ arT (IGL/Rifler) - Capit√£o desde novembro de 2023
  ‚Ä¢ KSCERATO (Rifler) - Jogador mais consistente desde 2018
  ‚Ä¢ yuurih (Rifler) - Destaque em clutches importantes
  ‚Ä¢ molodoy (AWPer) - Novo jogador do Cazaquist√£o (contratado em abril/2025)
  ‚Ä¢ YEKINDAR (Stand-in) - Jogador let√£o cobrindo aus√™ncias

üîπ Ex-jogadores not√°veis:
  ‚Ä¢ FalleN (atualmente rifler/IGL substituto)
  ‚Ä¢ chelo (transferido em 2024)
  ‚Ä¢ VINI (lend√°rio entry-fragger)

üèÜ Principais Conquistas:
  ‚Ä¢ Vice-campe√µes do ESL Pro League Season 17 (2023)
  ‚Ä¢ Semifinalistas do IEM Rio Major 2022 (melhor campanha brasileira)
  ‚Ä¢ Campe√µes da DreamHack Open Winter 2020
  ‚Ä¢ 2¬∫ lugar no ESL One: Cologne 2020 (Online)
  ‚Ä¢ 5x Campe√µes brasileiros consecutivos (2019-2023)

üìä Estat√≠sticas Recentes:
  ‚Ä¢ Top 15 do ranking HLTV em 2024
  ‚Ä¢ 3¬∫ lugar no IEM Katowice 2024
  ‚Ä¢ Eliminados na fase de grupos do Major de Copenhagen 2025

üìå Hist√≥ria:
  ‚Ä¢ Fundada em agosto de 2017 em S√£o Paulo
  ‚Ä¢ Primeira organiza√ß√£o brasileira a competir regularmente na Europa
  ‚Ä¢ Conhecida pelo estilo de jogo agressivo ("FURIA Style")
  ‚Ä¢ Base de f√£s estimada em 2.5 milh√µes (maior do CS2 no Brasil)

üí° Curiosidades:
  ‚Ä¢ Recorde de 87 mapas consecutivos com pelo menos 10 rounds
  ‚Ä¢ arT det√©m o recorde de maior n√∫mero de clutches em Majors (23)
  ‚Ä¢ KSCERATO j√° foi nomeado 3x para o Top 20 do mundo

Responda sempre em portugu√™s brasileiro, exceto quando explicitamente solicitado em outro idioma. Mantenha um tom empolgado mas profissional, como um comentarista esportivo.
"""

def query_furia_assistant(prompt: str) -> str:
    client = openai.OpenAI(
        base_url="https://openrouter.ai/api/v1",
        api_key=OPENROUTER_API_KEY
    )
    
    try:
        response = client.chat.completions.create(
            model="deepseek/deepseek-v3-base:free",
            messages=[
                {"role": "system", "content": FURIA_KNOWLEDGE},
                {"role": "user", "content": prompt}
            ],
            max_tokens=200,
            temperature=0.7  # Balances creativity vs accuracy
        )
        return response.choices[0].message.content
        
    except Exception as e:
        print(f"API Error: {e}")
        return "N√£o consegui responder agora. Sabia que a FURIA foi fundada em 2017?"
    
if __name__ == "__main__":
    test_questions = [
        ("Quem √© o capit√£o da FURIA CS2?", "arT"),
        ("Qual √© o papel do FalleN na equipe?", "rifler"),
        ("Liste os jogadores atuais", ["arT", "KSCERATO", "yuurih", "molodoy", "YEKINDAR"]),
        ("When was FURIA founded?", "2017")
    ]
    
    for question, expected in test_questions:
        print(f"\nQ: {question}")
        response = query_furia_assistant(question)
        print(f"A: {response}")
        if any(kw.lower() in response.lower() for kw in ([expected] if isinstance(expected, str) else expected)):
            print("‚úÖ Passed")
        else:
            print(f"‚ùå Failed (expected: {expected})")


def analyze_interests(text: str) -> List[str]:
    """Analyze user input for FURIA-related interests"""
    text = text.lower()
    interests = []
    
    interest_map = {
        "players": ["art", "kscerato", "yuurih", "fallen", "molodoy"],
        "matches": ["jogo", "partida", "match", "torneio"],
        "history": ["hist√≥ria", "funda√ß√£o", "2017"],
        "merch": ["camisa", "produto", "loja"]
    }
    
    for category, keywords in interest_map.items():
        if any(keyword in text for keyword in keywords):
            interests.append(category)
    
    return interests